[
  {
    "tags": [],
    "description": {
      "full": "<p>This pipe can be used for &quot;for loops&quot;, in the case of an array with non-numeric indexes.<br />\nIt returns the key and the value(s). In the example below the {{item.key}} contains the index value<br />\nand the {{item.value}} contains the value(s).</p>\n<p>When the value is an object with name and label, you get them with:<br />\n{{item.value.name}} and {{item.value.label}}</p>",
      "summary": "<p>This pipe can be used for &quot;for loops&quot;, in the case of an array with non-numeric indexes.<br />\nIt returns the key and the value(s). In the example below the {{item.key}} contains the index value<br />\nand the {{item.value}} contains the value(s).</p>",
      "body": "<p>When the value is an object with name and label, you get them with:<br />\n{{item.value.name}} and {{item.value.label}}</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 3,
    "codeStart": 12,
    "code": "@Pipe({\n    name: 'kuiKey'\n})\nexport class KeyPipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        const keys = [];\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                keys.push({ key: key, value: value[key] });\n            }\n        }\n        return keys;\n    }\n}",
    "ctx": false
  }
]