[
  {
    "tags": [],
    "description": {
      "full": "<p>The progress indicator can be used to show the status of loading something.<br />\nThis can be the simple loader or in case of submitting data it can show the status (not ready, loading, done or error).</p>\n<p>selector: kui-progress-indicator</p>",
      "summary": "<p>The progress indicator can be used to show the status of loading something.<br />\nThis can be the simple loader or in case of submitting data it can show the status (not ready, loading, done or error).</p>",
      "body": "<p>selector: kui-progress-indicator</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 3,
    "codeStart": 9,
    "code": "@Component({\n    selector: 'kui-progress-indicator',\n    templateUrl: './progress-indicator.component.html',\n    styleUrls: ['./progress-indicator.component.scss']\n})\nexport class ProgressIndicatorComponent implements OnInit {",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{number} [status]\n\n[status] is a number and can be used when submitting form data:\n\n- not ready:    -1\n- loading:       0\n- done:          1\n\n- error:       400",
        "name": "[status]",
        "description": "<p>[status] is a number and can be used when submitting form data:</p>\n<ul>\n<li>\n<p>not ready:    -1</p>\n</li>\n<li>\n<p>loading:       0</p>\n</li>\n<li>\n<p>done:          1</p>\n</li>\n<li>\n<p>error:       400</p>\n</li>\n</ul>",
        "types": [
          "number"
        ],
        "typesDescription": "<code>number</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 27,
    "code": "@Input() status?: number;",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{string} [color=primary]\n\nParameter to customize the appearance of the loader.\nHexadecimal color value e.g. #00ff00 or similar color values 'red', 'green' etc.",
        "name": "[color=primary]",
        "description": "<p>Parameter to customize the appearance of the loader.<br />\nHexadecimal color value e.g. #00ff00 or similar color values 'red', 'green' etc.</p>",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 29,
    "codeStart": 35,
    "code": "@Input() color?: string = 'primary';",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "ignore",
        "string": "",
        "html": ""
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 38,
    "codeStart": 41,
    "code": "constructor() {\n}\n\nngOnInit() {\n}\n\n}",
    "ctx": {
      "type": "constructor",
      "name": "constructor",
      "string": "constructor()"
    }
  }
]