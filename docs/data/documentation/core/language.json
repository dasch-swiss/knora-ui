[
  {
    "tags": [
      {
        "type": "deprecated",
        "string": "since v9.5.0 \nRequest information about the future of this service on the repository `@knora/api` (github:dasch-swiss/knora-api-js-lib).",
        "html": "<p>since v9.5.0<br />\nRequest information about the future of this service on the repository <code>@knora/api</code> (github:dasch-swiss/knora-api-js-lib).</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 4,
    "codeStart": 9,
    "code": "@Injectable({\n    providedIn: 'root'\n})\nexport class LanguageService {\n\n    private subject = new Subject<any>();",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "deprecated",
        "string": "since v9.5.0",
        "html": "<p>since v9.5.0</p>"
      },
      {
        "type": "param",
        "string": "lang",
        "name": "lang",
        "description": "",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false,
        "html": "<p>lang</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "setLanguage(lang: string) {\n    this.subject.next({ var: lang });\n}",
    "ctx": {
      "type": "method",
      "name": "setLanguage",
      "string": "setLanguage()"
    }
  },
  {
    "tags": [
      {
        "type": "deprecated",
        "string": "since v9.5.0",
        "html": "<p>since v9.5.0</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 27,
    "code": "getLanguage(): Observable<any> {\n    return this.subject.asObservable();\n}\n\n}",
    "ctx": {
      "type": "method",
      "name": "getLanguage",
      "string": "getLanguage()"
    }
  }
]