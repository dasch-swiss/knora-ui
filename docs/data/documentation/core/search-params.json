[
  {
    "tags": [
      {
        "type": "deprecated",
        "string": "since v10.0.0 \nWill be replaced by `@knora/api` (github:knora-api-js-lib)\n\nRepresents the parameters of an extended search.",
        "html": "<p>since v10.0.0<br />\nWill be replaced by <code>@knora/api</code> (github:knora-api-js-lib)</p>\n<p>Represents the parameters of an extended search.</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 5,
    "codeStart": 12,
    "code": "export class ExtendedSearchParams {",
    "ctx": {
      "type": "class",
      "constructor": "ExtendedSearchParams",
      "cons": "ExtendedSearchParams",
      "name": "ExtendedSearchParams",
      "extends": "",
      "string": "new ExtendedSearchParams()"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "generateGravsearch a function that generates a Gravsearch query.\n\nThe function takes the offset\nas a parameter and returns a Gravsearch query string.\nReturns false if not set correctly (init state).",
        "name": "generateGravsearch",
        "description": "<p>a function that generates a Gravsearch query.<br />\nThe function takes the offset<br />\nas a parameter and returns a Gravsearch query string.<br />\nReturns false if not set correctly (init state).</p>",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 22,
    "code": "constructor(public generateGravsearch: (offset: number) => string | boolean) {\n\n}\n\n}\n\n@Injectable({\nprovidedIn: 'root'\n})",
    "ctx": {
      "type": "constructor",
      "constructor": "ExtendedSearchParams",
      "cons": "ExtendedSearchParams",
      "name": "constructor",
      "string": "ExtendedSearchParams.prototype.constructor()"
    }
  },
  {
    "tags": [
      {
        "type": "deprecated",
        "string": "since v10.0.0 \nWill be replaced by `@knora/api` (github:knora-api-js-lib)\nTemporarily stores the parameters of an extended search.",
        "html": "<p>since v10.0.0<br />\nWill be replaced by <code>@knora/api</code> (github:knora-api-js-lib)<br />\nTemporarily stores the parameters of an extended search.</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "export class SearchParamsService {\n\n    private _currentSearchParams;\n\n    constructor() {\n        // init with a dummy function that returns false\n        // if the application is reloaded, this will be returned\n        this._currentSearchParams = new BehaviorSubject<ExtendedSearchParams>(new ExtendedSearchParams((offset: number) => false));\n    }",
    "ctx": {
      "type": "class",
      "constructor": "SearchParamsService",
      "cons": "SearchParamsService",
      "name": "SearchParamsService",
      "extends": "",
      "string": "new SearchParamsService()"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{ExtendedSearchParams} searchParams",
        "name": "searchParams",
        "description": "",
        "types": [
          "ExtendedSearchParams"
        ],
        "typesDescription": "<a href=\"ExtendedSearchParams.html\">ExtendedSearchParams</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "html": "<p>{ExtendedSearchParams} searchParams</p>"
      },
      {
        "type": "returns",
        "string": "void",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false,
        "description": "<p>void</p>"
      }
    ],
    "description": {
      "full": "<p>Updates the parameters of an extended search.</p>",
      "summary": "<p>Updates the parameters of an extended search.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 47,
    "codeStart": 53,
    "code": "changeSearchParamsMsg(searchParams: ExtendedSearchParams): void {\n    this._currentSearchParams.next(searchParams);\n}",
    "ctx": {
      "type": "method",
      "constructor": "SearchParamsService",
      "cons": "SearchParamsService",
      "name": "changeSearchParamsMsg",
      "string": "SearchParamsService.prototype.changeSearchParamsMsg()"
    }
  },
  {
    "tags": [
      {
        "type": "returns",
        "string": "ExtendedSearchParams - search parameters",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false,
        "description": "<p>ExtendedSearchParams - search parameters</p>"
      }
    ],
    "description": {
      "full": "<p>Gets the search params of an extended search.</p>",
      "summary": "<p>Gets the search params of an extended search.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 57,
    "codeStart": 62,
    "code": "getSearchParams(): ExtendedSearchParams {\n    return this._currentSearchParams.getValue();\n}\n\n}",
    "ctx": {
      "type": "method",
      "constructor": "SearchParamsService",
      "cons": "SearchParamsService",
      "name": "getSearchParams",
      "string": "SearchParamsService.prototype.getSearchParams()"
    }
  }
]