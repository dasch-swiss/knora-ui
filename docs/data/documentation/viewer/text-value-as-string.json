[
  {
    "tags": [],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "line": 1,
    "codeStart": null,
    "code": "import { Component, Input } from '@angular/core';\nimport { ReadTextValueAsString } from '@knora/api';\n\n@Component({\n    selector: 'kui-text-value-as-string',\n    templateUrl: './text-value-as-string.component.html',\n    styleUrls: ['./text-value-as-string.component.scss']\n})\nexport class TextValueAsStringComponent {\n\n    regexUrl: RegExp = /(http|https|ftp|ftps)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(\\/\\S*)?/;\n\n    @Input()\n    set valueObject(value: ReadTextValueAsString) {\n        // console.log(value);\n\n        const str: string = value.text;\n\n        if (this.regexUrl.exec(str)) {\n            const url: string = this.regexUrl.exec(str)[0];\n            const newStr = str.replace(this.regexUrl, '<a class=\"kui-link\" href=\"' + url + '\">' + url + '</a>');\n            value.text = newStr;\n            this._textStringValueObj = value;\n        } else {\n            this._textStringValueObj = value;\n        }\n    }\n\n    get valueObject() {\n\n\n        return this._textStringValueObj;\n    }\n\n    private _textStringValueObj: ReadTextValueAsString;\n\n    constructor() {\n    }\n\n}",
    "ctx": false
  }
]