[
  {
    "tags": [
      {
        "type": "param",
        "string": "resource the resource to be displayed (or no selection yet).",
        "name": "resource",
        "description": "<p>the resource to be displayed (or no selection yet).</p>",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false
      },
      {
        "type": "returns",
        "string": "",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false,
        "description": "",
        "html": ""
      }
    ],
    "description": {
      "full": "<p>Displays a selected resource using its label.</p>",
      "summary": "<p>Displays a selected resource using its label.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 46,
    "codeStart": 52,
    "code": "displayResource(resource: ReadResource | null) {\n\n    // null is the initial value (no selection yet)\n    if (resource !== null) {\n        return resource.label;\n    }\n}",
    "ctx": {
      "type": "method",
      "name": "displayResource",
      "string": "displayResource()"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "searchTerm",
        "name": "searchTerm",
        "description": "",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false,
        "html": "<p>searchTerm</p>"
      }
    ],
    "description": {
      "full": "<p>Search for resources whose labels contain the given search term, restricting to to the given properties object constraint.</p>",
      "summary": "<p>Search for resources whose labels contain the given search term, restricting to to the given properties object constraint.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 60,
    "codeStart": 65,
    "code": "searchByLabel(searchTerm: string) {\n\n    // at least 3 characters are required\n    if (searchTerm.length >= 3) {",
    "ctx": {
      "type": "method",
      "name": "searchByLabel",
      "string": "searchByLabel()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<p>TODO: replace with knora-api-js-lib<br />\nthis._searchService.searchByLabelReadResourceSequence(searchTerm, 0, { limitToResourceClass: this._restrictToResourceClass }).subscribe(<br />\n(result: ReadResourcesSequence) =&gt; {<br />\nthis.resources = result.resources;<br />\n}, function (err) {<br />\nconsole.log('JSONLD of full resource request could not be expanded:' + err);<br />\n}<br />\n);</p>",
      "summary": "<p>TODO: replace with knora-api-js-lib<br />\nthis._searchService.searchByLabelReadResourceSequence(searchTerm, 0, { limitToResourceClass: this._restrictToResourceClass }).subscribe(<br />\n(result: ReadResourcesSequence) =&gt; {<br />\nthis.resources = result.resources;<br />\n}, function (err) {<br />\nconsole.log('JSONLD of full resource request could not be expanded:' + err);<br />\n}<br />\n);</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 70,
    "codeStart": 79,
    "code": "this.knoraApiConnection.v2.search.doSearchByLabel(searchTerm, 0, { limitToResourceClass: this._restrictToResourceClass }).subscribe(\n    (response: ReadResource[]) => {\n        this.resources = response;\n    });\n        } else {\n// clear selection\nthis.resources = undefined;\n        }\n\n    }",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "the form element whose value has to be checked.",
        "name": "the",
        "description": "<p>form element whose value has to be checked.</p>",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false
      },
      {
        "type": "returns",
        "string": "",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false,
        "description": "",
        "html": ""
      }
    ],
    "description": {
      "full": "<p>Checks that the selection is a [[ReadResource]].</p>\n<p>Surprisingly, [null] has to be returned if the value is valid: https://angular.io/guide/form-validation#custom-validators</p>",
      "summary": "<p>Checks that the selection is a [[ReadResource]].</p>",
      "body": "<p>Surprisingly, [null] has to be returned if the value is valid: https://angular.io/guide/form-validation#custom-validators</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 90,
    "codeStart": 98,
    "code": "validateResource(c: FormControl) {\n\n    const isValidResource = (c.value instanceof ReadResource);\n\n    if (isValidResource) {\n        return null;\n    } else {\n        return {\n            noResource: {\n                value: c.value\n            }\n        };\n    }\n\n}\n\nngOnInit() {\n    this.form = this.fb.group({\n        resource: [null, Validators.compose([\n            Validators.required,\n            this.validateResource\n        ])]\n    });\n\n    this.form.valueChanges.subscribe((data) => {\n        this.searchByLabel(data.resource);\n    });\n\n    resolvedPromise.then(() => {\n        // add form to the parent form group\n        this.formGroup.addControl('propValue', this.form);\n    });\n}\n\nngOnDestroy() {\n\n    // remove form from the parent form group\n    resolvedPromise.then(() => {\n        this.formGroup.removeControl('propValue');\n    });\n\n}\n\ngetValue(): Value {\n\n    return new IRI(this.form.value.resource.id);\n}\n\n}",
    "ctx": {
      "type": "method",
      "name": "validateResource",
      "string": "validateResource()"
    }
  }
]