[
  {
    "tags": [
      {
        "type": "param",
        "string": "{string} iri Iri of the resource (already URL encoded).",
        "name": "iri",
        "description": "<p>Iri of the resource (already URL encoded).</p>",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "returns",
        "string": "{Observable<ApiServiceResult>}",
        "types": [
          "Observable.<ApiServiceResult>"
        ],
        "typesDescription": "<a href=\"Observable.html\">Observable</a>.&lt;<a href=\"ApiServiceResult.html\">ApiServiceResult</a>&gt;",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "description": "",
        "html": "<p>{Observable<ApiServiceResult>}</p>"
      }
    ],
    "description": {
      "full": "<p>Given the Iri, requests the representation of a resource.</p>",
      "summary": "<p>Given the Iri, requests the representation of a resource.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 12,
    "codeStart": 19,
    "code": "getResource(iri): Observable<ApiServiceResult> {\n    // console.log('IRI from resource service: ', iri);\n    return this.httpGet('/v2/resources/' + encodeURIComponent(iri));\n}",
    "ctx": {
      "type": "method",
      "name": "getResource",
      "string": "getResource()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<p>// TODO: we should use the ApiService correctly. But right now it doesn't work<br />\ngetResource(iri): Observable<ReadResource> {<br />\nreturn this.httpGet('/v2/resources/' + encodeURIComponent(iri)).pipe(<br />\nmap((result: ApiServiceResult) =&gt; result.getBody(ReadResource)),<br />\ncatchError(this.handleJsonError)<br />\n);<br />\n}</p>",
      "summary": "<p>// TODO: we should use the ApiService correctly. But right now it doesn't work<br />\ngetResource(iri): Observable<ReadResource> {<br />\nreturn this.httpGet('/v2/resources/' + encodeURIComponent(iri)).pipe(<br />\nmap((result: ApiServiceResult) =&gt; result.getBody(ReadResource)),<br />\ncatchError(this.handleJsonError)<br />\n);<br />\n}</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 34,
    "code": "// TODO: post, put, delete\n}",
    "ctx": false
  }
]