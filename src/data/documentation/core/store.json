[
  {
    "tags": [
      {
        "type": "deprecated",
        "string": "since v9.5.0 \nRequest information about the future of this service on the repository `@knora/api` (github:dasch-swiss/knora-api-js-lib).",
        "html": "<p>since v9.5.0<br />\nRequest information about the future of this service on the repository <code>@knora/api</code> (github:dasch-swiss/knora-api-js-lib).</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 9,
    "codeStart": 14,
    "code": "@Injectable({\n    providedIn: 'root'\n})\nexport class StoreService {\n\n    constructor(private http: HttpClient, @Inject(KuiCoreConfigToken) public config) { }",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "deprecated",
        "string": "since v9.5.0 Resets the content of the triplestore.",
        "html": "<p>since v9.5.0 Resets the content of the triplestore.</p>"
      },
      {
        "type": "param",
        "string": "rdfDataObjects",
        "name": "rdfDataObjects",
        "description": "",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false,
        "html": "<p>rdfDataObjects</p>"
      },
      {
        "type": "returns",
        "string": "Observable<string>",
        "types": [],
        "typesDescription": "",
        "variable": false,
        "nonNullable": false,
        "nullable": false,
        "optional": false,
        "description": "<p>Observable<string></p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 28,
    "code": "resetTriplestoreContent(rdfDataObjects: RdfDataObject[]): Observable<string> {\n\n    return this.http.post<ResetTriplestoreContentResponse>(this.config.api + '/admin/store/ResetTriplestoreContent', rdfDataObjects)\n        .pipe(\n            map(\n                (data) => {\n                    const result: ResetTriplestoreContentResponse = data;\n                    // console.log('StoreService - resetTriplestoreContent: ', result);\n                    return result.message;\n                },\n                (error: HttpErrorResponse) => {\n                    if (error.error instanceof Error) {\n                        console.log('StoreService - resetTriplestoreContent - Client-side error occurred.', error);\n                    } else {\n                        console.log('StoreService - resetTriplestoreContent - Server-side error occurred.', error);\n                    }\n                    throw error;\n                }\n            ));\n\n}\n}",
    "ctx": {
      "type": "method",
      "name": "resetTriplestoreContent",
      "string": "resetTriplestoreContent()"
    }
  }
]