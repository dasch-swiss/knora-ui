[
  {
    "tags": [],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "line": 1,
    "codeStart": null,
    "code": "import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Constants } from '@knora/api';\nimport { PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'integer-value',\n    templateUrl: './integer-value.component.html',\n    styleUrls: ['./integer-value.component.scss']\n})\nexport class IntegerValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = Constants.IntValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            integerValue: [null, Validators.compose([Validators.required, Validators.pattern(/^-?\\d+$/)])] // only allow for integer values (no fractions)\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.integerValue), Constants.XsdInteger);\n    }\n\n}",
    "ctx": false
  }
]