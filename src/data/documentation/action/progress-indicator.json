[
  {
    "tags": [
      {
        "type": "example",
        "string": "// default progress indicator\n\n<kui-progress-indicator color=\"#ff00aa\"></kui-progress-indicator>",
        "html": "<p>// default progress indicator</p>\n<p><kui-progress-indicator color=\"#ff00aa\"></kui-progress-indicator></p>"
      },
      {
        "type": "example",
        "string": "~~~html // submit progress indicator: html\n\n<mat-list>\n    <mat-list-item *ngFor=\"let item of examples\">\n        <kui-progress-indicator mat-list-avatar [status]=\"item.status\"></kui-progress-indicator>\n        <p mat-line><strong><span>{{item.label}}</span></strong></p>\n        <p mat-line>status: {{item.status}}</p>\n    </mat-list-item>\n</mat-list>",
        "html": "<pre><code class=\"lang-html\">\n&lt;mat-list&gt;\n    &lt;mat-list-item *ngFor=&quot;let item of examples&quot;&gt;\n        &lt;kui-progress-indicator mat-list-avatar [status]=&quot;item.status&quot;&gt;&lt;/kui-progress-indicator&gt;\n        &lt;p mat-line&gt;&lt;strong&gt;&lt;span&gt;{{item.label}}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;\n        &lt;p mat-line&gt;status: {{item.status}}&lt;/p&gt;\n    &lt;/mat-list-item&gt;\n&lt;/mat-list&gt;</code></pre>"
      },
      {
        "type": "example",
        "string": "// instead of [color]: overwrite the progress indicator color in a global scss file in the app.\n\n.kui-progress-indicator {\n    .line > div {\n        background-color: #ff0000 !important;\n    }\n}",
        "html": "<p>// instead of [color]: overwrite the progress indicator color in a global scss file in the app.</p>\n<p>.kui-progress-indicator {<br />\n.line &gt; div {<br />\nbackground-color: #ff0000 !important;<br />\n}<br />\n}</p>"
      }
    ],
    "description": {
      "full": "<p>progress indicator / loader</p>\n<p><example-url>https://stackblitz.com/edit/knora-progress-indicator</example-url></p>",
      "summary": "<p>progress indicator / loader</p>",
      "body": "<p><example-url>https://stackblitz.com/edit/knora-progress-indicator</example-url></p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 4,
    "codeStart": 37,
    "code": "@Component({\n    selector: 'kui-progress-indicator',\n    templateUrl: './progress-indicator.component.html',\n    styleUrls: ['./progress-indicator.component.scss']\n})\nexport class ProgressIndicatorComponent implements OnInit {",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{number} status\n\n[status] is a number and can be used when submitting form data:\n\n- not ready:    -1\n- loading:       0\n- done:          1\n\n- error:       400",
        "name": "status",
        "description": "<p>[status] is a number and can be used when submitting form data:</p>\n<ul>\n<li>\n<p>not ready:    -1</p>\n</li>\n<li>\n<p>loading:       0</p>\n</li>\n<li>\n<p>done:          1</p>\n</li>\n<li>\n<p>error:       400</p>\n</li>\n</ul>",
        "types": [
          "number"
        ],
        "typesDescription": "<code>number</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 44,
    "codeStart": 55,
    "code": "@Input() status?: number;",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{string} color (optional)\n\nParameter to customize the appearance of the loader.\nHexadecimal color value e.g. #00ff00 or similar color values 'red', 'green' etc.",
        "name": "color",
        "description": "<p>(optional)<br />\nParameter to customize the appearance of the loader.<br />\nHexadecimal color value e.g. #00ff00 or similar color values 'red', 'green' etc.</p>",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 57,
    "codeStart": 63,
    "code": "@Input() color?: string = 'primary';",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "ignore",
        "string": "",
        "html": ""
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 66,
    "codeStart": 69,
    "code": "constructor() {\n}\n\nngOnInit() {\n}\n\n}",
    "ctx": {
      "type": "constructor",
      "name": "constructor",
      "string": "constructor()"
    }
  }
]