[
  {
    "tags": [],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "line": 1,
    "codeStart": null,
    "code": "import { Component, OnInit } from '@angular/core';\nimport { KuiView } from '../kui-view';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {\n  ApiServiceError,\n  ExtendedSearchParams,\n  GravsearchGenerationService,\n  KnoraConstants,\n  OntologyCacheService,\n  OntologyInformation,\n  ReadResource,\n  ReadResourcesSequence,\n  SearchParamsService,\n  SearchService\n} from '@knora/core';\n\n@Component({\n  selector: 'kui-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.scss']\n})\nexport class SearchResultsComponent extends KuiView {\n\n  KnoraConstants = KnoraConstants;\n  offset: number = 0;\n  maxOffset: number = 0;\n  gravsearchGenerator: ExtendedSearchParams;\n  result: ReadResource[] = [];\n  ontologyInfo: OntologyInformation;\n  numberOfAllResults: number;\n  rerender: boolean = false;\n  searchQuery: string;\n  searchMode: string;\n  isLoading = true;\n  errorMessage: any = undefined;\n  navigationSubscription: Subscription;\n  pagingLimit: number = 25;\n\n  constructor(\n    protected _route: ActivatedRoute,\n    protected _searchService: SearchService,\n    protected _searchParamsService: SearchParamsService,\n    protected _router: Router\n  ) {\n    super(_route, _searchService, _searchParamsService, _router);\n  }\n}",
    "ctx": false
  }
]